{ { - $fullName := include "library-chart.fullname" . - } }
  { { - $initContainerName := printf "%s-%s" $fullName "init-data" | trunc 63 | trimSuffix "-" - } }
apiVersion: apps/v1
kind: Deployment
metadata:
  name: { { include "library-chart.fullname" . } }
  labels:
    { { - include "library-chart.labels" . | nindent 4 } }
spec:
  { { - if not .Values.autoscaling.enabled } }
replicas: { { .Values.replicaCount } }
  { { - end } }
selector:
  matchLabels:
    { { - include "library-chart.selectorLabels" . | nindent 6 } }
template:
  metadata:
  { { - with .Values.podAnnotations } }
  annotations:
    { { - toYaml . | nindent 8 } }
  { { - end } }
  labels:
    { { - include "library-chart.selectorLabels" . | nindent 8 } }
  spec:
    volumes:
      - name: html
        emptyDir: { }
    securityContext:
      { { - toYaml .Values.podSecurityContext | nindent 8 } }
    containers:
      - name: { { .Chart.Name } }
        securityContext:
          { { - toYaml .Values.securityContext | nindent 12 } }
        image: nginx:latest
        volumeMounts:
          - name: html
            mountPath: /usr/share/nginx/html
        imagePullPolicy: { { .Values.service.image.pullPolicy } }
        ports:
          - name: http
            containerPort: 80
            protocol: TCP
        readinessProbe:
          tcpSocket:
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 8000
          initialDelaySeconds: 15
          periodSeconds: 20
        resources:
          { { - toYaml .Values.resources | nindent 12 } }

    initContainers:
      - name: generate-report
        image: "{{ .Values.service.image.repository }}:{{ .Values.service.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: { { .Values.service.image.pullPolicy } }
        volumeMounts:
          - name: html
            mountPath: /html
        command: [ sh, -c ]
        args: [ "python dataprofiler/main.py --action render --storage_type s3 --input_file $INPUT_FILE
                                    --file_format $FILE_FORMAT --separator $SEPARATOR --na_val $NA_VAL 
                                    --report_render_path /html --report_format html
                                    --report_name index" ]
        envFrom:
          { { - if .Values.s3.enabled } }
          - configMapRef:
              name: { { include "library-chart.configMapNameS3" . } }
          { { - end } }
        env:
          - name: INPUT_FILE
            value: "{{ .Values.global.datasource.filePath }}"
          - name: FILE_FORMAT
            value: "{{ .Values.global.datasource.fileFormat }}"
          - name: SEPARATOR
            value: "{{ .Values.global.datasource.separator }}"
          - name: NA_VAL
            value: "{{ .Values.global.datasource.naVal }}"

    { { - with .Values.nodeSelector } }
    nodeSelector:
      { { - toYaml . | nindent 8 } }
    { { - end } }
    { { - with .Values.affinity } }
    affinity:
      { { - toYaml . | nindent 8 } }
    { { - end } }
    { { - with .Values.tolerations } }
    tolerations:
      { { - toYaml . | nindent 8 } }
    { { - end } }